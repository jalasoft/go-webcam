package webcam

import (
	"log"

	"github.com/jalasoft/go-webcam/v4l2"
)

var FRMSIZE_TYPE_DISCRETE FrameSizeType = 1

//FRMSIZE_TYPE_CONTINUOUS FrameSizeType = 2
var FRMSIZE_TYPE_STEPWISE FrameSizeType = 3

var PIX_FMT_RGB332 = PixelFormat{"V4L2_PIX_FMT_RGB332", v4l2.V4L2_PIX_FMT_RGB332}
var PIX_FMT_RGB444 = PixelFormat{"V4L2_PIX_FMT_RGB444", v4l2.V4L2_PIX_FMT_RGB444}
var PIX_FMT_ARGB444 = PixelFormat{"V4L2_PIX_FMT_ARGB444", v4l2.V4L2_PIX_FMT_RGB444}
var PIX_FMT_XRGB444 = PixelFormat{"V4L2_PIX_FMT_XRGB444", v4l2.V4L2_PIX_FMT_XRGB444}
var PIX_FMT_RGB555 = PixelFormat{"V4L2_PIX_FMT_RGB555", v4l2.V4L2_PIX_FMT_RGB555}
var PIX_FMT_ARGB555 = PixelFormat{"V4L2_PIX_FMT_ARGB555", v4l2.V4L2_PIX_FMT_ARGB555}
var PIX_FTM_XRGB555 = PixelFormat{"V4L2_PIX_FMT_XRGB555", v4l2.V4L2_PIX_FMT_XRGB555}
var PIX_FMT_RGB565 = PixelFormat{"V4L2_PIX_FMT_RGB565", v4l2.V4L2_PIX_FMT_RGB565}
var PIX_FMT_RGB555X = PixelFormat{"V4L2_PIX_FMT_RGB555X", v4l2.V4L2_PIX_FMT_RGB555X}
var PIX_FMT_ARGB555X = PixelFormat{"V4L2_PIX_FMT_ARGB555X", v4l2.V4L2_PIX_FMT_ARGB555X}
var PIX_FMT_XRGB555X = PixelFormat{"V4L2_PIX_FMT_XRGB555X", v4l2.V4L2_PIX_FMT_XRGB555X}
var PIX_FMT_RGB565X = PixelFormat{"V4L2_PIX_FMT_RGB565X", v4l2.V4L2_PIX_FMT_RGB565X}
var PIX_FMT_BGR666 = PixelFormat{"V4L2_PIX_FMT_BGR666", v4l2.V4L2_PIX_FMT_BGR666}
var PIX_FMT_BGR24 = PixelFormat{"V4L2_PIX_FMT_BGR24", v4l2.V4L2_PIX_FMT_BGR24}
var PIX_FMT_RGB24 = PixelFormat{"V4L2_PIX_FMT_RGB24", v4l2.V4L2_PIX_FMT_RGB24}
var PIX_FMT_BGR32 = PixelFormat{"V4L2_PIX_FMT_BGR32", v4l2.V4L2_PIX_FMT_BGR32}
var PIX_FMT_ABGR32 = PixelFormat{"V4L2_PIX_FMT_ABGR32", v4l2.V4L2_PIX_FMT_ABGR32}
var PIX_FMT_XBGR32 = PixelFormat{"V4L2_PIX_FMT_XBGR32", v4l2.V4L2_PIX_FMT_XBGR32}
var PIX_FMT_RGB32 = PixelFormat{"V4L2_PIX_FMT_RGB32", v4l2.V4L2_PIX_FMT_RGB32}
var PIX_FMT_ARGB32 = PixelFormat{"V4L2_PIX_FMT_ARGB32", v4l2.V4L2_PIX_FMT_ARGB32}
var PIX_FMT_XRGB32 = PixelFormat{"V4L2_PIX_FMT_XRGB32", v4l2.V4L2_PIX_FMT_XRGB32}
var PIX_FMT_GREY = PixelFormat{"V4L2_PIX_FMT_GREY", v4l2.V4L2_PIX_FMT_GREY}
var PIX_FMT_Y4 = PixelFormat{"V4L2_PIX_FMT_Y4", v4l2.V4L2_PIX_FMT_Y4}
var PIX_FMT_Y6 = PixelFormat{"V4L2_PIX_FMT_Y6", v4l2.V4L2_PIX_FMT_Y6}
var PIX_FMT_Y10 = PixelFormat{"V4L2_PIX_FMT_Y10", v4l2.V4L2_PIX_FMT_Y10}
var PIX_FMT_Y12 = PixelFormat{"V4L2_PIX_FMT_Y12", v4l2.V4L2_PIX_FMT_Y12}
var PIX_FMT_Y16 = PixelFormat{"V4L2_PIX_FMT_Y16", v4l2.V4L2_PIX_FMT_Y16}
var PIX_FMT_Y16_BE = PixelFormat{"V4L2_PIX_FMT_Y16_BE", v4l2.V4L2_PIX_FMT_Y16_BE}
var PIX_FMT_Y10BPACK = PixelFormat{"V4L2_PIX_FMT_Y10BPACK", v4l2.V4L2_PIX_FMT_Y10BPACK}
var PIX_FMT_PAL8 = PixelFormat{"V4L2_PIX_FMT_PAL8", v4l2.V4L2_PIX_FMT_PAL8}
var PIX_FMT_UV8 = PixelFormat{"V4L2_PIX_FMT_UV8", v4l2.V4L2_PIX_FMT_UV8}
var PIX_FMT_YUYV = PixelFormat{"V4L2_PIX_FMT_YUYV", v4l2.V4L2_PIX_FMT_YUYV}
var PIX_FMT_YYUV = PixelFormat{"V4L2_PIX_FMT_YYUV", v4l2.V4L2_PIX_FMT_YYUV}
var PIX_FMT_YVYU = PixelFormat{"V4L2_PIX_FMT_YVYU", v4l2.V4L2_PIX_FMT_YVYU}
var PIX_FMT_UYVY = PixelFormat{"V4L2_PIX_FMT_UYVY", v4l2.V4L2_PIX_FMT_UYVY}
var PIX_FMT_VYUY = PixelFormat{"V4L2_PIX_FMT_VYUY", v4l2.V4L2_PIX_FMT_VYUY}
var PIX_FMT_Y41P = PixelFormat{"V4L2_PIX_FMT_Y41P", v4l2.V4L2_PIX_FMT_Y41P}
var PIX_FMT_YUV444 = PixelFormat{"V4L2_PIX_FMT_YUV444", v4l2.V4L2_PIX_FMT_YUV444}
var PIX_FMT_YUV555 = PixelFormat{"V4L2_PIX_FMT_YUV555", v4l2.V4L2_PIX_FMT_YUV555}
var PIX_FMT_YUV565 = PixelFormat{"V4L2_PIX_FMT_YUV565", v4l2.V4L2_PIX_FMT_YUV565}
var PIX_FMT_YUV32 = PixelFormat{"V4L2_PIX_FMT_YUV32", v4l2.V4L2_PIX_FMT_YUV32}
var PIX_FMT_HI240 = PixelFormat{"V4L2_PIX_FMT_HI240", v4l2.V4L2_PIX_FMT_HI240}
var PIX_FMT_HM12 = PixelFormat{"V4L2_PIX_FMT_HM12", v4l2.V4L2_PIX_FMT_HM12}
var PIX_FMT_M420 = PixelFormat{"V4L2_PIX_FMT_M420", v4l2.V4L2_PIX_FMT_M420}
var PIX_FMT_NV12 = PixelFormat{"V4L2_PIX_FMT_NV12", v4l2.V4L2_PIX_FMT_NV12}
var PIX_FMT_NV21 = PixelFormat{"V4L2_PIX_FMT_NV21", v4l2.V4L2_PIX_FMT_NV21}
var PIX_FMT_NV16 = PixelFormat{"V4L2_PIX_FMT_NV16", v4l2.V4L2_PIX_FMT_NV16}
var PIX_FMT_NV61 = PixelFormat{"V4L2_PIX_FMT_NV61", v4l2.V4L2_PIX_FMT_NV61}
var PIX_FMT_NV24 = PixelFormat{"V4L2_PIX_FMT_NV24", v4l2.V4L2_PIX_FMT_NV24}
var PIX_FMT_NV42 = PixelFormat{"V4L2_PIX_FMT_NV42", v4l2.V4L2_PIX_FMT_NV42}
var PIX_FMT_NV12M = PixelFormat{"V4L2_PIX_FMT_NV12M", v4l2.V4L2_PIX_FMT_NV12M}
var PIX_FMT_NV21M = PixelFormat{"V4L2_PIX_FMT_NV21M", v4l2.V4L2_PIX_FMT_NV21M}
var PIX_FMT_NV16M = PixelFormat{"V4L2_PIX_FMT_NV16M", v4l2.V4L2_PIX_FMT_NV16M}
var PIX_FMT_NV61M = PixelFormat{"V4L2_PIX_FMT_NV61M", v4l2.V4L2_PIX_FMT_NV61M}
var PIX_FMT_NV12MT = PixelFormat{"V4L2_PIX_FMT_NV12MT", v4l2.V4L2_PIX_FMT_NV12MT}
var PIX_FMT_NV12MT_16X16 = PixelFormat{"V4L2_PIX_FMT_NV12MT_16X16", v4l2.V4L2_PIX_FMT_NV12MT_16X16}
var PIX_FMT_YUV410 = PixelFormat{"V4L2_PIX_FMT_YUV410", v4l2.V4L2_PIX_FMT_YUV410}
var PIX_FMT_YVU410 = PixelFormat{"V4L2_PIX_FMT_YVU410", v4l2.V4L2_PIX_FMT_YVU410}
var PIX_FMT_YUV411P = PixelFormat{"V4L2_PIX_FMT_YUV411P", v4l2.V4L2_PIX_FMT_YUV411P}
var PIX_FMT_YUV420 = PixelFormat{"V4L2_PIX_FMT_YUV420", v4l2.V4L2_PIX_FMT_YUV420}
var PIX_FMT_YVU420 = PixelFormat{"V4L2_PIX_FMT_YVU420", v4l2.V4L2_PIX_FMT_YVU420}
var PIX_FMT_YUV422P = PixelFormat{"V4L2_PIX_FMT_YUV422P", v4l2.V4L2_PIX_FMT_YUV422P}
var PIX_FMT_YUV40M = PixelFormat{"V4L2_PIX_FMT_YUV420M", v4l2.V4L2_PIX_FMT_YUV420M}
var PIX_FMT_YVU420M = PixelFormat{"V4L2_PIX_FMT_YVU420M", v4l2.V4L2_PIX_FMT_YVU420M}
var PIX_FMT_YUV422M = PixelFormat{"V4L2_PIX_FMT_YUV422M", v4l2.V4L2_PIX_FMT_YUV422M}
var PIX_FMT_YVU422M = PixelFormat{"V4L2_PIX_FMT_YVU422M", v4l2.V4L2_PIX_FMT_YVU422M}
var PIX_FMT_YUV444M = PixelFormat{"V4L2_PIX_FMT_YUV444M", v4l2.V4L2_PIX_FMT_YUV444M}
var PIX_FMT_YVU444M = PixelFormat{"V4L2_PIX_FMT_YVU444M", v4l2.V4L2_PIX_FMT_YVU444M}
var PIX_FMT_SBGGR8 = PixelFormat{"V4L2_PIX_FMT_SBGGR8", v4l2.V4L2_PIX_FMT_SBGGR8}
var PIX_FMT_SGBRG8 = PixelFormat{"V4L2_PIX_FMT_SGBRG8", v4l2.V4L2_PIX_FMT_SGBRG8}
var PIX_FMT_SGRBG8 = PixelFormat{"V4L2_PIX_FMT_SGRBG8", v4l2.V4L2_PIX_FMT_SGRBG8}
var PIX_FMT_SRGGB8 = PixelFormat{"V4L2_PIX_FMT_SRGGB8", v4l2.V4L2_PIX_FMT_SRGGB8}
var PIX_FMT_SBGGR10 = PixelFormat{"V4L2_PIX_FMT_SBGGR10", v4l2.V4L2_PIX_FMT_SBGGR10}
var PIX_FMT_SGBRG10 = PixelFormat{"V4L2_PIX_FMT_SGBRG10", v4l2.V4L2_PIX_FMT_SGBRG10}
var PIX_FMT_SGRBG10 = PixelFormat{"V4L2_PIX_FMT_SGRBG10", v4l2.V4L2_PIX_FMT_SGRBG10}
var PIX_FMT_SRGGB10 = PixelFormat{"V4L2_PIX_FMT_SRGGB10", v4l2.V4L2_PIX_FMT_SRGGB10}
var PIX_FMT_SBGGR10P = PixelFormat{"V4L2_PIX_FMT_SBGGR10P", v4l2.V4L2_PIX_FMT_SBGGR10P}
var PIX_FMT_SGBRG10P = PixelFormat{"V4L2_PIX_FMT_SGBRG10P", v4l2.V4L2_PIX_FMT_SGBRG10P}
var PIX_FMT_SGRBG10P = PixelFormat{"V4L2_PIX_FMT_SGRBG10P", v4l2.V4L2_PIX_FMT_SGRBG10P}
var PIX_FMT_SRGGB10P = PixelFormat{"V4L2_PIX_FMT_SRGGB10P", v4l2.V4L2_PIX_FMT_SRGGB10P}
var PIX_FMT_SBGGR10ALAW8 = PixelFormat{"V4L2_PIX_FMT_SBGGR10ALAW8", v4l2.V4L2_PIX_FMT_SBGGR10ALAW8}
var PIX_FMT_SGBRG10ALAW8 = PixelFormat{"V4L2_PIX_FMT_SGBRG10ALAW8", v4l2.V4L2_PIX_FMT_SGBRG10ALAW8}
var PIX_FMT_SGRBG10ALAWB = PixelFormat{"V4L2_PIX_FMT_SGRBG10ALAW8", v4l2.V4L2_PIX_FMT_SGRBG10ALAW8}
var PIX_FMT_SRGGB10ALAW8 = PixelFormat{"V4L2_PIX_FMT_SRGGB10ALAW8", v4l2.V4L2_PIX_FMT_SRGGB10ALAW8}
var PIX_FMT_SBGGR10DPCM8 = PixelFormat{"V4L2_PIX_FMT_SBGGR10DPCM8", v4l2.V4L2_PIX_FMT_SBGGR10DPCM8}
var PIX_FMT_SGBRG10DPCM8 = PixelFormat{"V4L2_PIX_FMT_SGBRG10DPCM8", v4l2.V4L2_PIX_FMT_SGBRG10DPCM8}
var PIX_FMT_SGRBG10DPCM8 = PixelFormat{"V4L2_PIX_FMT_SGRBG10DPCM8", v4l2.V4L2_PIX_FMT_SGRBG10DPCM8}
var PIX_FMT_SRGGB10DPCM8 = PixelFormat{"V4L2_PIX_FMT_SRGGB10DPCM8", v4l2.V4L2_PIX_FMT_SRGGB10DPCM8}
var PIX_FMT_SBGGR12 = PixelFormat{"V4L2_PIX_FMT_SBGGR12", v4l2.V4L2_PIX_FMT_SBGGR12}
var PIX_FMT_SGBRG12 = PixelFormat{"V4L2_PIX_FMT_SGBRG12", v4l2.V4L2_PIX_FMT_SGBRG12}
var PIX_FMT_SGRBG12 = PixelFormat{"V4L2_PIX_FMT_SGRBG12", v4l2.V4L2_PIX_FMT_SGRBG12}
var PIX_FMT_SRGGB12 = PixelFormat{"V4L2_PIX_FMT_SRGGB12", v4l2.V4L2_PIX_FMT_SRGGB12}
var PIX_FMT_SBGGR16 = PixelFormat{"V4L2_PIX_FMT_SBGGR16", v4l2.V4L2_PIX_FMT_SBGGR12}
var PIX_FMT_MJPEG = PixelFormat{"V4L2_PIX_FMT_MJPEG", v4l2.V4L2_PIX_FMT_MJPEG}
var PIX_FMT_JPEG = PixelFormat{"V4L2_PIX_FMT_JPEG", v4l2.V4L2_PIX_FMT_JPEG}
var PIX_FMT_DV = PixelFormat{"V4L2_PIX_FMT_DV", v4l2.V4L2_PIX_FMT_DV}
var PIX_FMT_MPEG = PixelFormat{"V4L2_PIX_FMT_MPEG", v4l2.V4L2_PIX_FMT_MPEG}
var PIX_FMT_H264 = PixelFormat{"V4L2_PIX_FMT_H264", v4l2.V4L2_PIX_FMT_H264}
var PIX_FMT_H264_NO_SC = PixelFormat{"V4L2_PIX_FMT_H264_NO_SC", v4l2.V4L2_PIX_FMT_H264_NO_SC}
var PIX_FMT_H264_MVC = PixelFormat{"V4L2_PIX_FMT_H264_MVC", v4l2.V4L2_PIX_FMT_H264_MVC}
var PIX_FMT_H263 = PixelFormat{"V4L2_PIX_FMT_H263", v4l2.V4L2_PIX_FMT_H263}
var PIX_FMT_MPEG1 = PixelFormat{"V4L2_PIX_FMT_MPEG1", v4l2.V4L2_PIX_FMT_MPEG1}
var PIX_FMT_MPEG2 = PixelFormat{"V4L2_PIX_FMT_MPEG2", v4l2.V4L2_PIX_FMT_MPEG2}
var PIX_FMT_MPEG4 = PixelFormat{"V4L2_PIX_FMT_MPEG4", v4l2.V4L2_PIX_FMT_MPEG4}
var PIX_FMT_XVID = PixelFormat{"V4L2_PIX_FMT_XVID", v4l2.V4L2_PIX_FMT_XVID}
var PIX_FMT_VC1_ANNEX_G = PixelFormat{"V4L2_PIX_FMT_VC1_ANNEX_G", v4l2.V4L2_PIX_FMT_VC1_ANNEX_G}
var PIX_FMT_VC1_ANNEX_L = PixelFormat{"V4L2_PIX_FMT_VC1_ANNEX_L", v4l2.V4L2_PIX_FMT_VC1_ANNEX_L}
var PIX_FMT_VP8 = PixelFormat{"V4L2_PIX_FMT_VP8", v4l2.V4L2_PIX_FMT_VP8}
var PIX_FMT_CPIA1 = PixelFormat{"V4L2_PIX_FMT_CPIA1", v4l2.V4L2_PIX_FMT_CPIA1}
var PIX_FMT_WNVA = PixelFormat{"V4L2_PIX_FMT_WNVA", v4l2.V4L2_PIX_FMT_WNVA}
var PIX_FMT_SN9C10X = PixelFormat{"V4L2_PIX_FMT_SN9C10X", v4l2.V4L2_PIX_FMT_SN9C10X}
var PIX_FMT_SN9C20X_I420 = PixelFormat{"V4L2_PIX_FMT_SN9C20X_I420", v4l2.V4L2_PIX_FMT_SN9C20X_I420}
var PIX_FMT_PCW1 = PixelFormat{"V4L2_PIX_FMT_PWC1", v4l2.V4L2_PIX_FMT_PWC1}
var PIX_FMT_PWC2 = PixelFormat{"V4L2_PIX_FMT_PWC2", v4l2.V4L2_PIX_FMT_PWC2}
var PIX_FMT_ET61X251 = PixelFormat{"V4L2_PIX_FMT_ET61X251", v4l2.V4L2_PIX_FMT_ET61X251}
var PIX_FMT_SPCA501 = PixelFormat{"V4L2_PIX_FMT_SPCA501", v4l2.V4L2_PIX_FMT_SPCA501}
var PIX_FMT_SPCA505 = PixelFormat{"V4L2_PIX_FMT_SPCA505", v4l2.V4L2_PIX_FMT_SPCA505}
var PIX_FMT_SPCA508 = PixelFormat{"V4L2_PIX_FMT_SPCA508", v4l2.V4L2_PIX_FMT_SPCA508}
var PIX_FMT_SPCA561 = PixelFormat{"V4L2_PIX_FMT_SPCA561", v4l2.V4L2_PIX_FMT_SPCA561}
var PIX_FMT_PAC207 = PixelFormat{"V4L2_PIX_FMT_PAC207", v4l2.V4L2_PIX_FMT_PAC207}
var PIX_FMT_MR97310A = PixelFormat{"V4L2_PIX_FMT_MR97310A", v4l2.V4L2_PIX_FMT_MR97310A}
var PIX_FMT_JL2005BCD = PixelFormat{"V4L2_PIX_FMT_JL2005BCD", v4l2.V4L2_PIX_FMT_JL2005BCD}
var PIX_FMT_SN9C2028 = PixelFormat{"V4L2_PIX_FMT_SN9C2028", v4l2.V4L2_PIX_FMT_SN9C20X_I420}
var PIX_FMT_SQ905C = PixelFormat{"V4L2_PIX_FMT_SQ905C", v4l2.V4L2_PIX_FMT_SQ905C}
var PIX_FMT_PJPG = PixelFormat{"V4L2_PIX_FMT_PJPG", v4l2.V4L2_PIX_FMT_PJPG}
var PIX_FMT_OV511 = PixelFormat{"V4L2_PIX_FMT_OV511", v4l2.V4L2_PIX_FMT_OV511}
var PIX_FMT_OV518 = PixelFormat{"V4L2_PIX_FMT_OV518", v4l2.V4L2_PIX_FMT_OV518}
var PIX_FMT_STV0680 = PixelFormat{"V4L2_PIX_FMT_STV0680", v4l2.V4L2_PIX_FMT_STV0680}
var PIX_FMT_TM6000 = PixelFormat{"V4L2_PIX_FMT_TM6000", v4l2.V4L2_PIX_FMT_TM6000}
var PIX_FMT_CIT_YYVYUY = PixelFormat{"V4L2_PIX_FMT_CIT_YYVYUY", v4l2.V4L2_PIX_FMT_CIT_YYVYUY}
var PIX_FMT_KONICA420 = PixelFormat{"V4L2_PIX_FMT_KONICA420", v4l2.V4L2_PIX_FMT_KONICA420}
var PIX_FMT_JPGL = PixelFormat{"V4L2_PIX_FMT_JPGL", v4l2.V4L2_PIX_FMT_JPGL}
var PIX_FMT_SE401 = PixelFormat{"V4L2_PIX_FMT_SE401", v4l2.V4L2_PIX_FMT_SE401}
var PIX_FMT_S5C_UYVY_JPG = PixelFormat{"V4L2_PIX_FMT_S5C_UYVY_JPG", v4l2.V4L2_PIX_FMT_S5C_UYVY_JPG}
var PIX_FMT_Y8I = PixelFormat{"V4L2_PIX_FMT_Y8I", v4l2.V4L2_PIX_FMT_Y8I}
var PIX_FMT_Y12I = PixelFormat{"V4L2_PIX_FMT_Y12I", v4l2.V4L2_PIX_FMT_Y12I}
var PIX_FMT_Z16 = PixelFormat{"V4L2_PIX_FMT_Z16", v4l2.V4L2_PIX_FMT_Z16}

var AllPixelFormats = []PixelFormat{
	PIX_FMT_RGB332,
	PIX_FMT_RGB332,
	PIX_FMT_ARGB444,
	PIX_FMT_XRGB444,
	PIX_FMT_RGB555,
	PIX_FMT_ARGB555,
	PIX_FTM_XRGB555,
	PIX_FMT_RGB565,
	PIX_FMT_RGB555X,
	PIX_FMT_ARGB555X,
	PIX_FMT_XRGB555X,
	PIX_FMT_RGB565X,
	PIX_FMT_BGR666,
	PIX_FMT_BGR24,
	PIX_FMT_RGB24,
	PIX_FMT_BGR32,
	PIX_FMT_ABGR32,
	PIX_FMT_XBGR32,
	PIX_FMT_RGB32,
	PIX_FMT_ARGB32,
	PIX_FMT_XRGB32,
	PIX_FMT_GREY,
	PIX_FMT_Y4,
	PIX_FMT_Y6,
	PIX_FMT_Y10,
	PIX_FMT_Y12,
	PIX_FMT_Y16,
	PIX_FMT_Y16_BE,
	PIX_FMT_Y10BPACK,
	PIX_FMT_PAL8,
	PIX_FMT_UV8,
	PIX_FMT_YUYV,
	PIX_FMT_YYUV,
	PIX_FMT_YVYU,
	PIX_FMT_UYVY,
	PIX_FMT_VYUY,
	PIX_FMT_Y41P,
	PIX_FMT_YUV444,
	PIX_FMT_YUV555,
	PIX_FMT_YUV565,
	PIX_FMT_YUV32,
	PIX_FMT_HI240,
	PIX_FMT_HM12,
	PIX_FMT_M420,
	PIX_FMT_NV12,
	PIX_FMT_NV21,
	PIX_FMT_NV16,
	PIX_FMT_NV61,
	PIX_FMT_NV24,
	PIX_FMT_NV42,
	PIX_FMT_NV12M,
	PIX_FMT_NV21M,
	PIX_FMT_NV16M,
	PIX_FMT_NV61M,
	PIX_FMT_NV12MT,
	PIX_FMT_NV12MT_16X16,
	PIX_FMT_YUV410,
	PIX_FMT_YVU410,
	PIX_FMT_YUV411P,
	PIX_FMT_YUV420,
	PIX_FMT_YVU420,
	PIX_FMT_YUV422P,
	PIX_FMT_YUV40M,
	PIX_FMT_YVU420M,
	PIX_FMT_YUV422M,
	PIX_FMT_YVU422M,
	PIX_FMT_YUV444M,
	PIX_FMT_YVU444M,
	PIX_FMT_SBGGR8,
	PIX_FMT_SGBRG8,
	PIX_FMT_SGRBG8,
	PIX_FMT_SRGGB8,
	PIX_FMT_SBGGR10,
	PIX_FMT_SGBRG10,
	PIX_FMT_SGRBG10,
	PIX_FMT_SRGGB10,
	PIX_FMT_SBGGR10P,
	PIX_FMT_SGBRG10P,
	PIX_FMT_SGRBG10P,
	PIX_FMT_SRGGB10P,
	PIX_FMT_SBGGR10ALAW8,
	PIX_FMT_SGBRG10ALAW8,
	PIX_FMT_SGRBG10ALAWB,
	PIX_FMT_SRGGB10ALAW8,
	PIX_FMT_SBGGR10DPCM8,
	PIX_FMT_SGBRG10DPCM8,
	PIX_FMT_SGRBG10DPCM8,
	PIX_FMT_SRGGB10DPCM8,
	PIX_FMT_SBGGR12,
	PIX_FMT_SGBRG12,
	PIX_FMT_SGRBG12,
	PIX_FMT_SRGGB12,
	PIX_FMT_SBGGR16,
	PIX_FMT_MJPEG,
	PIX_FMT_JPEG,
	PIX_FMT_DV,
	PIX_FMT_MPEG,
	PIX_FMT_H264,
	PIX_FMT_H264_NO_SC,
	PIX_FMT_H264_MVC,
	PIX_FMT_H263,
	PIX_FMT_MPEG1,
	PIX_FMT_MPEG2,
	PIX_FMT_MPEG4,
	PIX_FMT_XVID,
	PIX_FMT_VC1_ANNEX_G,
	PIX_FMT_VC1_ANNEX_L,
	PIX_FMT_VP8,
	PIX_FMT_CPIA1,
	PIX_FMT_WNVA,
	PIX_FMT_SN9C10X,
	PIX_FMT_SN9C20X_I420,
	PIX_FMT_PCW1,
	PIX_FMT_PWC2,
	PIX_FMT_ET61X251,
	PIX_FMT_SPCA501,
	PIX_FMT_SPCA505,
	PIX_FMT_SPCA508,
	PIX_FMT_SPCA561,
	PIX_FMT_PAC207,
	PIX_FMT_MR97310A,
	PIX_FMT_JL2005BCD,
	PIX_FMT_SN9C2028,
	PIX_FMT_SQ905C,
	PIX_FMT_PJPG,
	PIX_FMT_OV511,
	PIX_FMT_OV518,
	PIX_FMT_STV0680,
	PIX_FMT_TM6000,
	PIX_FMT_CIT_YYVYUY,
	PIX_FMT_KONICA420,
	PIX_FMT_JPGL,
	PIX_FMT_SE401,
	PIX_FMT_S5C_UYVY_JPG,
	PIX_FMT_Y8I,
	PIX_FMT_Y12I,
	PIX_FMT_Z16,
}

func PixelFormatFromString(value string) (PixelFormat, bool) {
	for _, pixfmt := range AllPixelFormats {
		if pixfmt.Name == value {
			return pixfmt, true
		}
	}
	return PixelFormat{}, false
}

/*
func (d *device) SupportsDiscrete(format uint32, width uint32, height uint32) (bool, error) {

	var result bool = false

	err := d.iterateFrameSizes(d.file.Fd(), format, func(str v4l2.V4l2Frmsizeenum) bool {
		if str.Type != v4l2.V4L2_FRMSIZE_TYPE_DISCRETE {
			return true
		}

		discrete := str.Discrete()

		if discrete.Width == width && discrete.Height == height {
			result = true
			return false
		}

		return true
	})

	if err != nil {
		return false, err
	}

	return result, nil
}
func (d *device) AllDiscreteMJPEG() ([]DiscreteFrameSize, error) {
	return d.AllDiscrete(v4l2.V4L2_PIX_FMT_MJPEG)
}*/

func (d *device) Discrete(format PixelFormat) ([]DiscreteFrameSize, error) {

	result := make([]DiscreteFrameSize, 0, 10)

	err := d.readFrameSizes(d.file.Fd(), format.Value, func(str v4l2.V4l2Frmsizeenum) {
		if str.Type == v4l2.V4L2_FRMSIZE_TYPE_DISCRETE {
			disc := str.Discrete()
			result = append(result, DiscreteFrameSize{disc.Width, disc.Height})
		}
	})

	return result, err
}

func (d *device) Stepwise(format PixelFormat) ([]StepwiseFrameSize, error) {

	result := make([]StepwiseFrameSize, 0, 10)

	err := d.readFrameSizes(d.file.Fd(), format.Value, func(str v4l2.V4l2Frmsizeenum) {
		if str.Type == v4l2.V4L2_FRMSIZE_TYPE_STEPWISE {
			step := str.Stepwise()
			framesize := StepwiseFrameSize{
				step.Min_width,
				step.Max_width,
				step.Step_width,
				step.Min_height,
				step.Max_height,
				step.Step_height}

			result = append(result, framesize)
		}
	})

	return result, err
}

/*
* Callback function that accepts filled structure with frame size
 */
type frameSizeCallback func(str v4l2.V4l2Frmsizeenum)

/*
* local method that accepts consumer who does concrete logic for each frame size
 */
func (d *device) readFrameSizes(fd uintptr, format uint32, callback frameSizeCallback) error {

	var index uint32

	for {
		var str v4l2.V4l2Frmsizeenum
		str.Index = index
		str.PixelFormat = format
		ok, err := v4l2.QueryFrameSize(fd, &str)

		if err != nil {
			log.Printf("An error occured during reading frame size for index %d and format %d: %v\n", index, format, err)
			return err
		}

		if !ok {
			return nil
		}

		callback(str)
		index++
	}
}
